###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        25/Oct/2018  16:54:57
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\application\main.c
#    Command line =  
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\application\main.c
#        --preprocess=cl
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -lC
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -o
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\
#        -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\bsp\
#        -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\drivers\
#        -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\application\
#        -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\
#        -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\application\
#        -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\cmsis\
#        -I
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\drivers\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\List\main.lst
#    Object file  =  
#        C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\iar_7_20_1\Debug\Obj\main.o
#
###############################################################################

C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpgl1\application\main.c
      1          /***********************************************************************************************************************
      2          File: main.c                                                                
      3          
      4          Description:
      5          Container for the MPG firmware.  
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"

  void LedOn(LedNumberType eLED_);
             ^
"C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpg_common\drivers\leds.h",75  Error[Pe020]: 
          identifier "LedNumberType" is undefined

  void LedOff(LedNumberType eLED_);
              ^
"C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpg_common\drivers\leds.h",76  Error[Pe020]: 
          identifier "LedNumberType" is undefined

  void LedToggle(LedNumberType eLED_);
                 ^
"C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpg_common\drivers\leds.h",77  Error[Pe020]: 
          identifier "LedNumberType" is undefined

  void LedPWM(LedNumberType eLED_, LedRateType ePwmRate_);
              ^
"C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpg_common\drivers\leds.h",78  Error[Pe020]: 
          identifier "LedNumberType" is undefined

  void LedBlink(LedNumberType eLED_, LedRateType ePwmRate_);
                ^
"C:\Users\ryanh\Documents\GitHub\Razor_Atmel\firmware_mpg_common\drivers\leds.h",79  Error[Pe020]: 
          identifier "LedNumberType" is undefined
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */
     15          volatile u32 G_u32SystemFlags = 0;                     /* Global system flags */
     16          volatile u32 G_u32ApplicationFlags = 0;                /* Global applications flags: set when application is successfully initialized */
     17          
     18          /*--------------------------------------------------------------------------------------------------------------------*/
     19          /* External global variables defined in other files (must indicate which file they are defined in) */
     20          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     21          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     22          
     23          
     24          /***********************************************************************************************************************
     25          Global variable definitions with scope limited to this local application.
     26          Variable names shall start with "Main_" and be declared as static.
     27          ***********************************************************************************************************************/
     28          
     29          
     30          /***********************************************************************************************************************
     31          Main Program
     32          Main has two sections:
     33          
     34          1. Initialization which is run once on power-up or reset.  All drivers and applications are setup here without timing
     35          contraints but must complete execution regardless of success or failure of starting the application. 
     36          
     37          2. Super loop which runs infinitely giving processor time to each application.  The total loop time should not exceed
     38          1ms of execution time counting all application execution.  SystemSleep() will execute to complete the remaining time in
     39          the 1ms period.
     40          ***********************************************************************************************************************/
     41          
     42          void main(void)
     43          {
     44            G_u32SystemFlags |= _SYSTEM_INITIALIZING;
     45            // Check for watch dog restarts
     46          
     47            /* Low level initialization */
     48            WatchDogSetup(); /* During development, set to not reset processor if timeout */
                   ^
Warning[Pe223]: function "WatchDogSetup" declared implicitly
     49            GpioSetup();
                   ^
Warning[Pe223]: function "GpioSetup" declared implicitly
     50            ClockSetup();
                   ^
Warning[Pe223]: function "ClockSetup" declared implicitly
     51            InterruptSetup();
     52            SysTickSetup();
                   ^
Warning[Pe223]: function "SysTickSetup" declared implicitly
     53          
     54            /* Driver initialization */
     55            MessagingInitialize();
     56            UartInitialize();
     57            DebugInitialize();
     58          
     59            /* Debug messages through DebugPrintf() are available from here */
     60          
     61            SspInitialize();
     62            TWIInitialize();
     63          
     64            LedInitialize();
     65            ButtonInitialize();
     66          
     67          #ifndef SIMULATOR_MODE
     68            LcdInitialize();
                   ^
Warning[Pe223]: function "LcdInitialize" declared implicitly
     69            AntInitialize();
     70            SdCardInitialize();
                   ^
Warning[Pe223]: function "SdCardInitialize" declared implicitly
     71          #endif /* SIMULATOR_MODE */
     72          
     73            /* Application initialization */
     74          //  BoardTestInitialize();
     75          //  AudioTestInitialize();
     76              UserAppInitialize();
     77            
     78            /* Exit initialization */
     79            SystemStatusReport();
     80            G_u32SystemFlags &= ~_SYSTEM_INITIALIZING;
     81            
     82            /* Super loop */  
     83            while(1)
     84            {
     85              WATCHDOG_BONE();
                     ^
Warning[Pe223]: function "WATCHDOG_BONE" declared implicitly
     86              
     87              /* Drivers */
     88              LedUpdate();
     89              ButtonRunActiveState();
     90              UartRunActiveState();
     91              SspRunActiveState();
     92              TWIRunActiveState();
     93              MessagingRunActiveState();
     94              DebugRunActiveState();
     95              
     96          #ifndef SIMULATOR_MODE
     97              LcdRunActiveState();
                     ^
Warning[Pe223]: function "LcdRunActiveState" declared implicitly
     98              AntRunActiveState();
     99              SdCardRunActiveState();
                     ^
Warning[Pe223]: function "SdCardRunActiveState" declared implicitly
    100          #endif /* SIMULATOR_MODE */
    101          
    102              /* Applications */
    103              //BoardTestRunActiveState();
    104              //AudioTestRunActiveState();
    105              UserAppRunActiveState();
    106              
    107              /* System sleep*/
    108              HEARTBEAT_OFF();
                     ^
Warning[Pe223]: function "HEARTBEAT_OFF" declared implicitly
    109              SystemSleep();
                     ^
Warning[Pe223]: function "SystemSleep" declared implicitly
    110              HEARTBEAT_ON();
                     ^
Warning[Pe223]: function "HEARTBEAT_ON" declared implicitly
    111            } /* end while(1) main super loop */
    112            
    113          } /* end main() */
    114          
    115          
    116          /*--------------------------------------------------------------------------------------------------------------------*/
    117          /* End of File */
    118          /*--------------------------------------------------------------------------------------------------------------------*/

Errors: 5
Warnings: 12
